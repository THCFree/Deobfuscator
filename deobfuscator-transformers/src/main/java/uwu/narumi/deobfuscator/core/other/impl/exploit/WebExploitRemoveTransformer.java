package uwu.narumi.deobfuscator.core.other.impl.exploit;

import uwu.narumi.deobfuscator.api.asm.ClassWrapper;
import uwu.narumi.deobfuscator.api.context.Context;
import uwu.narumi.deobfuscator.api.transformer.Transformer;

public class WebExploitRemoveTransformer extends Transformer {

  private boolean changed = false;

  @Override
  protected void transform(ClassWrapper scope, Context context) throws Exception {
    changed |= context.getClasses().entrySet().removeIf(entry -> entry.getKey().contains("<html>"));
    changed |= context.getFiles().entrySet().removeIf(entry -> entry.getKey().contains("<html>"));

    context.classes().forEach(classWrapper -> {
      changed |= classWrapper.methods().removeIf(methodNode -> methodNode.name.contains("<html>"));
      changed |= classWrapper.fields().removeIf(fieldNode -> fieldNode.name.contains("<html>") || fieldNode.desc.contains("<html>"));
    });

    if (changed) {
      markChange();
    }
  }
}
